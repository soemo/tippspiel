name: Continuous Deployment

on: [push]

jobs:
  cd:
    name: Continuous Integration
    runs-on: ubuntu-latest

    # If you need DB like MySQL then define service below.
    services:
      # How to use MySQL
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: tippspiel_test
        ports:
        - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby 2.7.2
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
        bundler-cache: true

    - name: Verify MySQL connection from host
      run: |
        sudo /etc/init.d/mysql start
        mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -u root -proot -e "CREATE DATABASE IF NOT EXISTS tippspiel_test;"

    - name: create DB and run rspec tests
      env:
        RAILS_ENV: test
        DB_PASSWORD: ""
        # tell Rails to use proper port for MySQL
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        WEBSITE_URL: http://localhost:3000
        ADMIN_EMAIL: test-tippspiel@test.com
        MAIL: tippspiel@test.com
        SECRET_BASE_KEY: r90435943jv90t960dc87966cdfe8a6b730c1ecbee871d6a4b92e4687b34cb29d99f67981a8ca5522671db884aec9d1d0c296f1660bce_gha
        COOKIE_STORE_KEY: _gha_tippspiel_session
      run: |
        cp config/database.yml.gha-ci config/database.yml

        bundle exec rake db:create
        bundle exec rake db:migrate --trace
        bundle exec rake db:test:prepare

        bundle exec rake

    - name: capistrano deployment to beta-tippspiel
      if: github.ref == 'refs/heads/master'
      uses: miloserdow/capistrano-deploy@v2.1
      with:
        target: beta-tippspiel
        deploy_key: ${{ secrets.DEPLOY_ENC_KEY }}

    - name: capistrano deployment to tippspiel (prod on tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: miloserdow/capistrano-deploy@v2.1
      with:
        target: tippspiel
        deploy_key: ${{ secrets.DEPLOY_ENC_KEY }}
